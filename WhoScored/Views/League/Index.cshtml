@model WhoScored.Models.WorldDetailsModel
@{
    ViewBag.Title = "League";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">

    var oteamStandingsTable;

    function updateLeagueText() {
        $(".selectedLeague").text(this.country + ' / ' + this.series);
    }

    var selectedLeague = {};


    function setTeamStandingsTable() {
        series = $('#seriesSelect').val();
        season = $('#seasonSelect').val();

        if (season != null && series != null) {

            oteamStandingsTable = $('#teamStandings').dataTable({
                "sDom": '<"top">rt<"bottom"flp><"clear">',
                "bFilter": false,
                "bRetrieve": true,
                "bServerSide": true,
                "bPaginate": false,
                "bLengthChange": false,
                "sAjaxSource": "League/TeamStandings",
                "bProcessing": false,
                "fnServerData": function (sSource, aoData, fnCallback) {

                    aoData.push({ "name": "season", "value": season });
                    aoData.push({ "name": "seriesId", "value": series });

                    $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback
                    });
                },
                "aoColumns": [
                    { "sName": "TeamId", "sWidth": "5%" },
                    { "sName": "TeamName", "sWidth": "45%" },
                    { "sName": "Played", "sWidth": "10px" },
                    { "sName": "Won", "sWidth": "10px" },
                    { "sName": "Drawn", "sWidth": "10px" },
                    { "sName": "Lost", "sWidth": "10px" },
                    { "sName": "GoalsScored", "sWidth": "10px" },
                    { "sName": "GoalsConceded", "sWidth": "10px" },
                    { "sName": "GoalDifference", "sWidth": "10px" },
                    { "sName": "TotalPoints", "sWidth": "10px" }
                ]
            });
        }
    }


    function UpdateSelectedSeriesHeader() {
        selectedLeague.country = $('#countryId option:selected').text();
        selectedLeague.series = $('#seriesSelect option:selected').text();
        $(selectedLeague).trigger('leagueUpdated');
    }

    $(document).ready(function () {
        $("#seriesSelect").CascadingDropDown("#countryId", '/Migration/AsyncSeriesSelect');
        $("#seasonSelect").CascadingDropDown("#countryId", '/Migration/AsyncSeasonSelect');


        $("#seriesSelect,#countryId").change(function () {
            UpdateSelectedSeriesHeader();
        });

        $(selectedLeague).bind('leagueUpdated', updateLeagueText);

        var countryId = $('#countryId').val();

        $.ajax({
            type: 'POST',
            url: "/Migration/AsyncSeasonSelect",
            data:
                {
                    countryId: countryId
                },
            dataType: 'json',
            traditional: true,
            success: function (result) {
                var options = $("#seasonSelect");
                $.each(result, function () {
                    options.append($("<option />").val(this.Value).text(this.Text));
                });
                options.removeAttr("disabled");
            }
        });

        $.ajax({
            type: 'POST',
            url: "/Migration/AsyncSeriesSelect",
            data:
                {
                    countryId: countryId
                },
            dataType: 'json',
            traditional: true,
            success: function (result) {
                var options = $("#seriesSelect");
                $.each(result, function () {
                    options.append($("<option />").val(this.Value).text(this.Text));
                });
                options.removeAttr("disabled");
                setTeamStandingsTable();
                UpdateSelectedSeriesHeader();
            }
        });

        $('#seasonSelect').change(function () {
            setTeamStandingsTable();
            oteamStandingsTable.fnDraw();
        });

        $('#seriesSelect').change(function () {
            setTeamStandingsTable();
            oteamStandingsTable.fnDraw();
        });
    });

</script>
<div class="page-header">
    <h1>
        <span class="selectedLeague">League</span></h1>
</div>
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span3">
            <label class="control-label" for="countryId">
                Country</label>
            <div class="controls">
                <select id="countryId" name="countryId">
                    @foreach (var country in Model.WorldDetails.Where(c => c.LeagueInWhoScored).OrderBy(c => c.EnglishName))
                    {
                        <option value="@country.LeagueID" >@country.EnglishName</option>
                    }
                </select>
            </div>
            <label class="control-label" for="seasonSelect">
                Season</label>
            <div class="controls">
                <select id="seasonSelect" name="seasonSelect">
                </select>
            </div>
            <label class="control-label" for="seriesSelect">
                Series</label>
            <div class="controls">
                <select id="seriesSelect" name="seriesSelect">
                </select>
            </div>
        </div>
        <div class="span9">
            <div class="btn-group" id="matchRound" data-toggle="buttons-radio">
                <button class="btn">
                    1</button>
                <button class="btn">
                    2</button>
                <button class="btn">
                    3</button>
                <button class="btn">
                    4</button>
                <button class="btn">
                    5</button>
                <button class="btn">
                    6</button>
                <button class="btn">
                    7</button>
                <button class="btn">
                    8</button>
                <button class="btn">
                    9</button>
                <button class="btn">
                    10</button>
                <button class="btn">
                    11</button>
                <button class="btn">
                    12</button>
                <button class="btn">
                    13</button>
                <button class="btn">
                    14</button>
            </div>            
            <br />
            
            <div class="btn-group-vertical" data-toggle="buttons-radio">
                <button type="button" class="btn">Top</button>
                <button type="button" class="btn">Middle</button>
                <button type="button" class="btn">Bottom</button>
            </div>
            <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered"
                id="teamStandings" width="100%">
                <thead>
                    <tr>
                        <th>
                            R
                        </th>
                        <th>
                            Team
                        </th>
                        <th>
                            P
                        </th>
                        <th>
                            W
                        </th>
                        <th>
                            D
                        </th>
                        <th>
                            L
                        </th>
                        <th>
                            GF
                        </th>
                        <th>
                            GA
                        </th>
                        <th>
                            GD
                        </th>
                        <th>
                            Pts
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                </tfoot>
            </table>
            <div id="noTeamStandingsAlert" class="alert alert-error hide">
                No team standings available.</div>
        </div>
    </div>
</div>
