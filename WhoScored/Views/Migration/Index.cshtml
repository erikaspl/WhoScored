@model WhoScored.Models.MigrationModel
@{
    ViewBag.Title = "Migration";
}
<script type="text/javascript">

    var oFixturesListTable;
    
    function S4() {
    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    }
 
    function guidGenerator() {
        return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
    }
   
    function migrateMatchDetails(matchId) {

        $('#processingModal').modal('show');
        $.ajax({
            url: "@Url.Action("MigrateMatchDetails", "Migration")",
            type: "POST",
            data:
                {
                    matchId: matchId
                },
            dataType: 'json',
            traditional: true,
            success: function() {
                $('#processingModal').modal('hide');
                oFixturesListTable.fnDraw();
            }
        });
    }

    function closeMigrationProgressModal() {
        $('#migrationProgressModal').modal('hide');
        oFixturesListTable.fnDraw();
    }

        var matchMigrationInterval;
        function checkMatchMigrationStatus(operationId) {
            $.ajax({
                url: "@Url.Action("GetMigrationStatus", "Migration")",
                type: "POST",
                data:
                    {
                        operationId: operationId
                    },
                dataType: 'json',
                traditional: true,
                success: function(result) {
                        $('#migrationProgressBar').width(result + "%");
                      }                
            });
        }

        $(document).ready(function() {
                  
        var series = null;
        var season = null;

        $('#processingModal').modal({
            keyboard: false,
            backdrop: false,
            show: false
        });

        $.extend( $.fn.dataTableExt.oStdClasses, {
            "sWrapper": "dataTables_wrapper form-inline"
        } );
       
        //Attach cascading behavior to the orderID select element.
        $("#seriesSelect").CascadingDropDown("#countryId", '/Migration/AsyncSeriesSelect');
        $("#seasonSelect").CascadingDropDown("#countryId", '/Migration/AsyncSeasonSelect');

        $('#migrateSeries').click(function() {
            var series = $('#seriesSelect').val();

            $.ajax({
                url: "@Url.Action("MigrateSeriesDetails", "Migration")",
                type: "POST",
                async: false,
                data:
                    {
                        seriesId: series
                    },
                dataType: 'json',
                traditional: true
            });
        });

        $('#migrateFixtures').click(function() {
            var series = $('#seriesSelect').val();
            var season = $('#seasonSelect').val();

            $.ajax({
                url: "@Url.Action("MigrateSeriesFixtures", "Migration")",
                type: "POST",
                data:
                    {
                        seriesId: series,
                        season: season
                    },
                dataType: 'json',
                traditional: true, 
                success: function(result) {
                    if (result == true) {
                        $("#fixturesMigrationSuccess").show();
                        $("#fixturesMigrationFailure").hide();
                    } else {
                        $("#fixturesMigrationFailure").show();
                        $("#fixturesMigrationSuccess").hide();
                    }
                }
            });
        });

        $('#migrateMatches').click(function() {

            var series = $('#seriesSelect').val();
            var season = $('#seasonSelect').val();
            var guid= guidGenerator();
            
            $('#migrationProgressBar').width("0%");
            $('#migrating').show();
            $('#migrationSuccess').hide();
            $('#migrationFailed').hide();
            $('#migrationProgressModalClose').hide();
            $('#migrationProgressModal').modal('show');
            
            matchMigrationInterval = setInterval(function() { checkMatchMigrationStatus(guid); }, 1000);
            
            $.ajax({
                    url: "@Url.Action("StartMigrateMatchDetails", "Migration")",
                    type: "POST",
                    data:
                        {
                            seriesId: series,
                            season: season,
                            operationId: guid
                        },
                    dataType: 'json',
                    traditional: true,
                    success: function() {
                        $('#migrationProgressBar').width("100%");
                        setTimeout(function() {
                            $('#migrating').hide();
                            $('#migrationSuccess').show();
                            $('#migrationProgressModalClose').show();
                        }, 1000);
                            
                    },
                    error: function() {
                            $('#migrating').hide();
                            $('#migrationFailed').show();
                            $('#migrationProgressModalClose').show();
                    },
                    
                    complete: function() {                        
                        clearInterval(matchMigrationInterval);
                        $.ajax({
                            url: "@Url.Action("CompleteMigrateMatchDetails", "Migration")",
                            type: "POST",
                            data:
                                {
                                    operationId: guid
                                },
                            dataType: 'json',
                            traditional: true
                        });
                    }
                }
            );
        }
        );
            

        $('#seriesSelect').change(function() {
            series = $('#seriesSelect').val();
            season = $('#seasonSelect').val();

            if (season != null && series != null) {
                $.ajax({
                    url: "@Url.Action("ShowFixtures", "Migration")",
                    type: "POST",
                    data:
                        {
                            seriesId: series,
                            season: season
                        },
                    dataType: 'json',
                    traditional: true,
                    success: function(data) {
                        if (data == false) {
                            $("#fixturesAlert").show();
                            $('#example_wrapper').hide();
                        }
                        else {
                            $('#example').show();
                            $('#example_wrapper').show();
                            $("#fixturesAlert").hide();
                            $("#fixturesMigrationSuccess").hide();
                            $("#fixturesMigrationFailure").hide();

                            oFixturesListTable = $('#example').dataTable({
                                "bRetrieve": true,
                                "bServerSide": true,
                                "bPaginate": false,
                                "bLengthChange": false,
                                "sAjaxSource": "Migration/AjaxHandler",
                                "bProcessing": true,
                                "fnServerData": function ( sSource, aoData, fnCallback ) {

                                    aoData.push({ "name": "season", "value": season });
                                    aoData.push({ "name": "seriesId", "value": series });

                                    $.ajax({
                                        "dataType": 'json',
                                        "type": "POST",
                                        "url": sSource,
                                        "data": aoData,
                                        "success": fnCallback
                                    });
                                },
                                "aoColumns": [
                                    {
                                        "sName": "MatchID",                                        
                                        "bSearchable": false,
                                        "bSortable": false,
                                        "fnRender": function(oObj) {
                                            if (oObj.aData[5] == 'False') {
                                                return '<button class="btn btn-primary btn-mini" type="button" onclick="migrateMatchDetails(' + oObj.aData[0] + ')">Migrate</button>'
                                              
                                            }
                                            else {
                                                return 'Match migrated';
                                            }
                                        }
                                    },
                                    { "sName": "MatchDate" },
                                    { "sName": "MatchRound" },
                                    { "sName": "HomeTeamName" },
                                    { "sName": "AwayTeamName" }                                
                                ]
                            });

                            oFixturesListTable.fnDraw();
                        }
                    }                    
                });
            }
        });
    });
</script>
<form class="well form-inline">
<fieldset>
    <div class="control-group">
        <label class="control-label" for="countryId">
            Country</label>
        <div class="controls">
            <select id="countryId" name="countryId" multiple="multiple" size="10">
                @foreach (var country in Model.WorldDetails.Where(c => c.LeagueInWhoScored).OrderBy(c => c.EnglishName))
                {
                    <option value="@country.LeagueID" >@country.EnglishName</option>
                }
            </select>
        </div>
        <label class="control-label" for="seasonSelect">
            Season</label>
        <div class="controls">
            <select id="seasonSelect" name="seasonSelect">
            </select>
        </div>
        <label class="control-label" for="seriesSelect">
            Searies</label>
        <div class="controls">
            <select id="seriesSelect" name="seriesSelect" multiple="multiple" size="10">
            </select>
        </div>
    </div>
    <div id="fixturesAlert" class="alert alert-error hide">
        <button id="closeFixturesMessage" class="close" data-dismiss="alert" type="button"
            onclick="$('#fixturesAlert').hide();">
            ×</button>
        No fixtures available.
    </div>
    <div id="fixturesMigrationSuccess" class="alert alert-success hide">
        <button id="closeFixturesMigrationSuccess" class="close" data-dismiss="alert" type="button"
            onclick="$('#fixturesMigrationSuccess').hide();">
            ×</button>
        Fixtures Successfully migrated.
    </div>
    <div id="fixturesMigrationFailure" class="alert alert-error hide">
        <button id="closeFixturesMigrationFailure" class="close" data-dismiss="alert" type="button"
            onclick="$('#fixturesMigrationFailure').hide();">
            ×</button>
        Fixtures migration failed.
    </div>
    <div class="form-actions">
        <a class="btn btn-danger" href="@Url.Action("MigrateWorldDetails", "Migration")">Migrate
            World</a>
        <button class="btn btn-danger" type="button" id="migrateSeries">
            Migrate Series</button>
        <button class="btn btn-danger" type="button" id="migrateFixtures">
            Migrate Fixtures</button>
        <button class="btn btn-danger" type="button" id="migrateMatches">
            Migrate All Matches</button>
    </div>
</fieldset>
<table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered hide"
    id="example" width="100%">
    <thead>
        <tr>
            <th>
                Match ID
            </th>
            <th>
                Match Date
            </th>
            <th>
                Match Round
            </th>
            <th>
                Home Team Name
            </th>
            <th>
                Away Team Name
            </th>
        </tr>
    </thead>
    <tbody>
    </tbody>
    <tfoot>
        <tr>
            <th>
                Match ID
            </th>
            <th>
                Match Date
            </th>
            <th>
                Match Round
            </th>
            <th>
                Home Team Name
            </th>
            <th>
                Away Team Name
            </th>
        </tr>
    </tfoot>
</table>
<div class="modal hide" id="processingModal">
    <div class="modal-header">
        <h3>
            Migrating</h3>
    </div>
    <div class="modal-body">
        <p>
            Migrating matches. Please wait...</p>
    </div>
</div>
<div class="modal hide" id="migrationProgressModal">
    <div class="alert alert-info" id="migrating">
        <strong>Migrating selected matches...</strong>
    </div>
    <div class="alert alert-success hide" id="migrationSuccess">
        <button class="close" id="migrationProgressModalClose" type="button" onclick="closeMigrationProgressModal();">x</button>
        <strong>Migration complete!</strong>
    </div>
    <div class="alert alert-error hide" id="migrationFailed">
        <strong>Migration Failed!</strong>
    </div>
    <div class="modal-body">
        <div class="progress">
            <div class="bar" id="migrationProgressBar" style="width: 0%;">
            </div>
        </div>
    </div>
</div>
</form>
